{"version":3,"file":"battleground.js","sourceRoot":"","sources":["../../src/view/panel/battleground.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAC,MAAM,EAAC,MAAM,yBAAyB,CAAC;AAC/C,OAAO,EAAC,OAAO,EAAC,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAC,SAAS,EAAC,MAAM,uBAAuB,CAAC;AAChD,OAAO,qBAAqB,CAAC;AAC7B,OAAO,uBAAuB,CAAC;AAG/B,IAAqB,YAAY,GAAjC,MAAqB,YAAa,SAAQ,UAAU;IAApD;;QA6CE,WAAM,GAAkB,IAAI,CAAC;QAG7B,SAAI,GAAG,EAAE,CAAC;QAGV,YAAO,GAAG,IAAI,CAAC;IAiDjB,CAAC;IAhDC,MAAM;QACJ,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAA;oBACK,IAAI,CAAC,OAAO;kBACd,IAAI,CAAC,IAAI;;UAEjB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC;;;UAG7C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC;;6CAET,IAAI,CAAC,UAAU;6CACf,IAAI,CAAC,YAAY;;KAEzD,CAAC;IACJ,CAAC;IAEO,gBAAgB,CAAC,MAAc,EAAE,IAA0B;QACjE,IAAI,SAAS,GAA6C,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;QACnH,OAAO,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACvB,OAAO,IAAI,CAAA;YACP,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACnB,IAAI,QAAQ,EAAE;oBACZ,IAAI,QAAQ,CAAC,WAAW,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAAE;wBAC9C,OAAO,IAAI,CAAA;2BACU,QAAQ;0BACnB,IAAI,CAAC,MAAM,mBAAmB,CAAA;qBACzC;yBAAM,IAAI,QAAQ,CAAC,WAAW,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,EAAE;wBACvD,OAAO,IAAI,CAAA;6BACc,QAAQ;0BACvB,IAAI,CAAC,MAAM,qBAAqB,CAAA;qBAC3C;;wBAAM,OAAO,IAAI,CAAC;iBACpB;;oBACI,OAAO,IAAI,CAAC;YACnB,CAAC,CAAC;eACG,CAAA;QACT,CAAC,CAAC,CAAA;IAEN,CAAC;IACO,YAAY;QAElB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,UAAU;QAChB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAC/B,CAAC;CACF,CAAA;AAnGQ,mBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0ClB,CAAC;AAKF;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;0CACf;AAGV;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;6CACX;AAnDI,YAAY;IADhC,aAAa,CAAC,mBAAmB,CAAC;GACd,YAAY,CAoGhC;eApGoB,YAAY","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {Combat} from \"../../controller/combat\";\nimport {Monster} from \"../../model/monster\";\nimport {Character} from \"../../model/character\";\nimport \"../creature/monster\";\nimport \"../creature/character\";\n\n@customElement('view-battleground')\nexport default class BattleGround extends LitElement {\n  static styles = css`\n    :host {\n      display: grid;\n      padding: 20px;\n      position: relative;\n      box-sizing: border-box;\n      width: 100%;\n      height: 70vh;\n      border: 1px solid #aaa;\n    }\n    .monster-side {\n      display: grid;\n      width: 100%;\n      height: 240px;\n      position: absolute;\n      top: 60px;\n      left: 0;\n    }\n    .player-side {\n      display: grid;\n      width: 100%;\n      height: 240px;\n      position: absolute;\n      bottom: 50px;\n      left: 0;\n    }\n    .start-button {\n      height: 25px;\n      width: 75px;\n      position: absolute;\n      bottom: 10px;\n      right: 15px;\n    }\n    .row {\n      height: 80px;\n      display: flex;\n      justify-content: center;\n    }\n    h3 {\n      margin: 0;\n      color: #D49E43;\n    }\n  `;\n\n  combat: Combat | null = null;\n\n  @property({type: String})\n  name = \"\";\n\n  @property({type: Boolean})\n  trigger = true;\n  render() {\n    this.combat = new Combat();\n    return html`\n    <div trigger=\"${this.trigger}\">\n      <h3>战斗地图: ${this.name}</h3>\n      <div class=\"monster-side\">\n        ${this._renderCreatures(this.combat, \"monster\")}\n      </div>\n      <div class=\"player-side\">\n        ${this._renderCreatures(this.combat, \"player\")}\n      </div>\n      <button class=\"start-button\" @click=\"${this._newBattle}\" style=\"right: 105px\">New</button>\n      <button class=\"start-button\" @click=\"${this._startBattle}\">Start</button>\n    </div>\n    `;\n  }\n\n  private _renderCreatures(combat: Combat, side: \"monster\" | \"player\") {\n    let creatures: Array<Array<Monster | Character | null>> = side === \"monster\" ? combat.monsters : combat.characters;\n    return creatures.map(row => {\n        return html`<div class=\"row\">\n          ${row.map(creature => {\n            if (creature) {\n              if (creature.constructor.name === Monster.name) {\n                return html`<model-monster \n                .monster=${<Monster> creature} \n                .combat=${this.combat}></model-monster>`\n              } else if (creature.constructor.name === Character.name) {\n                return html`<model-character\n                .character=${<Character> creature} \n                .combat=${this.combat}></model-character>`\n              } else return null;\n            }\n            else return null;\n          })}\n        </div>`\n      })\n\n  }\n  private _startBattle() {\n\n    console.log(this)\n    this.render();\n  }\n\n  private _newBattle() {\n    this.trigger = !this.trigger;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'view-battleground': BattleGround;\n  }\n}\n"]}