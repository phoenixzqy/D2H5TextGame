{"version":3,"file":"combatFactory.js","sourceRoot":"","sources":["../src/controller/combatFactory.ts"],"names":[],"mappings":"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","sourcesContent":["import {Monster} from \"../model/monster\";\nimport {Character} from \"../model/character\";\nimport {CreatureAttributes} from \"../model/creature\";\nimport {MonsterAttributes, MonsterTypes} from \"../model/monster\";\nimport Logger from \"../controller/logger\";\nimport BattleGround from \"../view/panel/battleground\";\n\nexport class Combat {\n  // each side has max of 3 rows and 10 columns\n  monsters: Monster[][];\n  characters: Character[][]; // including characters, summoned monsters and mercenary\n\n  viewElement: BattleGround | null;\n\n  constructor() {\n    this.monsters = [[],[],[]];\n    this.characters = [[],[],[]];\n    // generate monsters\n    for(let i = 0; i < 3; i++) { // 3 rows\n      let numOfMonster = Math.floor(Math.random() * 10) + 1;\n      for (let j = 0; j < numOfMonster; j++) {\n        let monsterAttr: MonsterAttributes = {\n          name: \"沉沦魔\",\n          hp: 500,\n          attackLow: 10,\n          attackHigh: 13,\n          attackSpeed: 2,\n          type: MonsterTypes.Normal,\n        }\n        this.monsters[i].push(new Monster(monsterAttr));\n      }\n    }\n    let charAttr: CreatureAttributes = {\n      name: \"野蛮人\",\n      hp: 1500,\n      attackLow: 100,\n      attackHigh: 200,\n      attackSpeed: 1,\n    }\n    this.characters[2].push(new Character(charAttr));\n    // view\n    let tmpl = document.createElement('template');\n    tmpl.innerHTML = `<view-battleground></view-battleground>`;\n    this.viewElement = /** @type {BattleGround} */ (tmpl.content.querySelector(\"view-battleground\"));\n    console.log(tmpl.content.querySelector(\"view-battleground\"))\n    console.log(tmpl.content.cloneNode(true))\n    if (this.viewElement) {\n      for (let i in this.characters) {\n        for (let char of this.characters[i]) {\n          this.viewElement.addCharacter(parseInt(i), char.viewElement);\n        }\n      }\n      for (let i in this.monsters) {\n        for (let monster of this.monsters[i]) {\n          this.viewElement.addMonster(parseInt(i), monster.viewElement);\n        }\n      }\n      this.viewElement.name = \"冰冷之原\"\n      this.viewElement.render();\n    }\n  }\n\n  startCombat() {\n    Logger.log(\"----------------- 战斗开始！ ----------------\");\n    for (let i in this.characters) {\n      for (let char of this.characters[i]) {\n        char.startCombat(this.monsters);\n      }\n    }\n    for (let i in this.monsters) {\n      for (let monster of this.monsters[i]) {\n        monster.startCombat(this.characters);\n      }\n    }\n    // start an interval to check if the combat is over.\n    let interval = window.setInterval(() => {\n      for (let i in this.characters) {\n        for (let char of this.characters[i]) {\n          if (char.hpRemaining > 0) return;\n        }\n      }\n      for (let i in this.monsters) {\n        for (let monster of this.monsters[i]) {\n          if (monster.hpRemaining > 0) return;\n        }\n      }\n\n      Logger.log(\"战斗结束！\");\n      window.clearInterval(interval);\n    }, 1000);\n  }\n  \n  initBattleGround() {\n    let appRoot = window.document.querySelector(\"d2-h5-game\");\n    if (appRoot === null || !appRoot.shadowRoot) return;\n    let containerEle = appRoot.shadowRoot.querySelector(\"#panel\");\n    console.log(this.viewElement)\n    if (containerEle) {\n      containerEle.appendChild(this.viewElement as Node);\n    }\n  }\n}\n"]}