{"version":3,"file":"monster.js","sourceRoot":"","sources":["../src/model/monster.ts"],"names":[],"mappings":"AAAA,MAAM,CAAN,IAAY,YAIX;AAJD,WAAY,YAAY;IACtB,iCAAiB,CAAA;IACjB,+BAAe,CAAA;IACf,6BAAa,CAAA;AACf,CAAC,EAJW,YAAY,KAAZ,YAAY,QAIvB;AA2BD,MAAM,OAAO,OAAO;IAIlB,YAAY,IAAiB;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,2DAA2D;QAC3D,gFAAgF;IAClF,CAAC;CACF","sourcesContent":["export enum MonsterTypes {\n  Normal = \"normal\",\n  Elite = \"elite\",\n  Boss = \"boss\",\n}\n\ninterface MonsterResistance {\n  cold: number;\n  fire: number;\n  lightning: number;\n  magic: number;\n  physical: number;\n  posion: number;\n}\n\ninterface MonsterStatus {\n  life: Array<number>;\n  attack: Array<number>;\n  attackRating: number;\n  defense: number;\n  blockRate: number;\n  exp: number;\n  resistance: MonsterResistance;\n}\n\nexport interface MonsterData  {\n  name: string;\n  base: MonsterStatus;\n  growth: MonsterStatus;\n}\n\nexport class Monster{\n\n  data: MonsterData;\n\n  constructor(json: MonsterData) {\n    this.data = json;\n    // TODO: use data imported from JSON to generate a monster.\n    // NOTE: <MonsterData> Json.fallen <--- json is parsed json data with \"any\" type\n  }\n}\n"]}